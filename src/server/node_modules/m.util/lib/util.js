
module.exports = {

	// 打*号
	hiddenString: function(str, startLen, endLen){
		if (!str) return "";

		var xNum = str.length - (startLen + endLen);

		if (xNum < 0) {
			return str;
		}
		return str.replace(str.slice(startLen, str.length - endLen), new Array(xNum + 1).join("*"));
  },

  // 获取数字
  getNumberFilter(str){
    let g = /(¥\d+)(?=\.)/gi;

    return str.replace(g, function(){
      return RegExp.$1;
    });
  },

  // 打...
	moreString: function(str, len){
    if (!str) return "";

    if(str.length <= len) return str;

		return str.substring(0, len)+"...";
	},

	/**
	 * 功能：时间戳转换时间
	 * 用法: expUse.format(new Date().getTime(), "yyyy-MM-dd hh:mm:ss W")
	 */
	format: function(timenumber, format) {

		let week = ["星期天", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
			newDate = new Date(timenumber),
			date = {
				"M+": (newDate.getMonth() + 1),
				"d+": newDate.getDate(),
				"h+": newDate.getHours(),
				"m+": newDate.getMinutes(),
				"s+": newDate.getSeconds(),
				"q+": Math.floor((newDate.getMonth() + 3) / 3),
				"S+": newDate.getMilliseconds(),
				"w+": newDate.getDay(),
				"W+": week[newDate.getDay()],
				"P+": () => {
					if(newDate.getHours() >= 11 && newDate.getHours() < 12)
					return "中午";

					if(newDate.getHours() < 11)
					return "上午";

					if(newDate.getHours() >=12)
					return "下午";
				}
			};

		if (/(y+)/i.test(format)) {
			format = format.replace(RegExp.$1, (newDate.getFullYear() + '').substr(4 - RegExp.$1.length));
		}

		for (var k in date) {
			if (new RegExp("(" + k + ")").test(format)) {
				format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k]).substr(("" + date[k]).length));
			}
		}

		return format;
  },

  // 时分秒
  countDown(timenumber, format){

    let date = {
      "d+": Math.floor(+timenumber/1000/60/60/24),
      "h+": Math.floor(+timenumber/1000/60/60%24),
      "m+": Math.floor(+timenumber/1000/60%60),
      "s+": Math.floor(+timenumber/1000%60),
    }

    for (var k in date) {
      console.log(new RegExp("(" + k + ")"))
			if (new RegExp("(" + k + ")").test(format)) {
        console.log(RegExp.$1)
				format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k]).substr(("" + date[k]).length));
			}
    }

    return format;
  },

	/**
	 * 倒计时
	*/
	tick(n, callback){

		let d = n * 1000, //持续时间
				c = d, //变化值
				t = 0, //当前时间
				b = 1, //当前值
				s = new Date().getTime();

		let T = (t, b, c, d) => (c * t / d + b),
				timer = null;

		function run(){
			let t = new Date().getTime() - s;

			if (d > t) {
				if (typeof callback === "function") {
					callback(Math.ceil(T(t, b, c, d) / 1000))
				};
				timer = setTimeout(function(){
					run();
				}, 1000);
			};
		}
		run();
  },

  // 获取随机字符串
  randomString(len = 16){
    let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';
    let maxPos = chars.length;
    let pwd = '';

    for (let i = 0; i < len; i++) {
      pwd += chars.charAt(Math.floor(Math.random() * maxPos));
    }
    return pwd;
  },

  // 请求来源
  filterGet: /^(\/jump\/)+|^(\/api\/)+/i,
};
